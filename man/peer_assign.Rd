% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peer.R
\name{peer_assign}
\alias{peer_assign}
\title{Assign file to reviewers}
\usage{
peer_assign(org, roster, path = NULL, local_path_review = NULL,
  prefix = "", suffix = "", exclude_pattern = c(".gitignore",
  ".Rhistory", "*.Rproj", "*.html", "*.md", "*.pdf"), message = NULL,
  branch = "master", overwrite = FALSE)
}
\arguments{
\item{org}{Character. Name of GitHub Organization.}

\item{roster}{Character. Data frame or file path of roster file with author-reviewer assignments. Must contain a column \code{user} with GitHub user names of authors, a column \code{user_random} with randomized tokens for user names, and one or more \code{rev*} columns that specify review assignments as values of the vector \code{user_random}.}

\item{path}{Character. File name or vector of file names to be included. If \code{NULL}, all files not contained in folders, except \code{.gitignore}, \code{.Rhistory}, \code{.Rproj}, \code{*.html}, \code{*.md}, and \code{*.pdf} will be moved to the reviewers' repositories.}

\item{local_path_review}{Character. Local file path of review feedback form to be added (must be .Rmd document), defaults to \code{NULL}. If \code{NULL}, no review form will be added to authors' repositories.}

\item{prefix}{Character. Common repository name prefix.}

\item{suffix}{Character. Common repository name suffix.}

\item{exclude_pattern}{Character. File extensions of files to not be moved to reviewer repositories if \code{path} is \code{NULL}, defaults to \code{c(".gitignore", ".Rhistory", "*.Rproj", "*.html", "*.md", "*.pdf")}.}

\item{message}{Character. Commit message, defaults to "Assigning review."}

\item{branch}{Character. Name of branch the file should be committed to, defaults to \code{master}.}

\item{overwrite}{Logical. Whether existing files in reviewers' repositories should be overwritten, defaults to \code{FALSE}.}
}
\description{
\code{peer_assign} adds files from authors' repositories to review repositories. The function creates an issue on the reviewers' repositories informing them that the review files are available and creates links to the relevant documents.
}
\examples{
\dontrun{
peer_assign(
org = "ghclass-test",
roster = "hw2_roster_seed12345.csv",
path = c("hw2_task.Rmd", "iris_data.csv"),
form_review = "hw2_review.Rmd",
prefix = "hw2-"
)
}

}
\seealso{
Other peer review functions: \code{\link{peer_file_add_aut}},
  \code{\link{peer_file_add_rev}},
  \code{\link{peer_form_create_rating}},
  \code{\link{peer_form_create_review}},
  \code{\link{peer_init}}, \code{\link{peer_return}},
  \code{\link{peer_roster_create}},
  \code{\link{peer_score_rating}},
  \code{\link{peer_score_review}}
}
\concept{peer review functions}
